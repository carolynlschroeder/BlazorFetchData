@page "/fetchdata"
@using Newtonsoft.Json
@using BlazorDemo.Models
@using JsonSerializer = System.Text.Json.JsonSerializer
@using System.Text.Json
@inject HttpClient HttpClient

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        using var httpResponse = await HttpClient.GetAsync("/weatherforecast");

        if (!httpResponse.IsSuccessStatusCode)
        {
            errorMessage = httpResponse.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }

        forecasts = await httpResponse.Content.ReadFromJsonAsync<List<WeatherForecast>>();
    }


}
